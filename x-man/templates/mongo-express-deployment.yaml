{{- if .Values.mongoExpress.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "x-man.fullname" . }}-mongo-express
  labels:
    {{- include "x-man.labels" . | nindent 4 }}
    app.kubernetes.io/name: mongo-express
    app.kubernetes.io/version: {{ .Values.mongoExpress.version | quote }}
    app.kubernetes.io/component: database-debugging
spec:
  selector:
    matchLabels:
      {{- include "x-man.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: mongo-express
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "x-man.labels" . | nindent 8 }}
        app.kubernetes.io/name: mongo-express
        app.kubernetes.io/version: {{ .Values.mongoExpress.version | quote }}
        app.kubernetes.io/component: database-debugging
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "x-man.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: mongo-express
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image:  "{{ .Values.mongoExpress.image }}:{{ .Values.mongoExpress.version }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
              {{- if .Values.mongoExpress.user }}
              httpHeaders:
                - name: Authorization
                  value: Basic {{ printf "%s:%s" .Values.mongoExpress.user .Values.mongoExpress.password | b64enc }}
              {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: http
              {{- if .Values.mongoExpress.user }}
              httpHeaders:
                - name: Authorization
                  value: Basic {{ printf "%s:%s" .Values.mongoExpress.user .Values.mongoExpress.password | b64enc }}
              {{- end }}
          {{- with .Values.mongoExpress.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: ME_CONFIG_MONGODB_URL
              value: mongodb://{{ .Values.mongodb.user }}:{{ .Values.mongodb.password}}@{{ include "x-man.fullname" . }}-mongodb:27017
            {{- if .Values.mongoExpress.user }}
            - name: ME_CONFIG_BASICAUTH_USERNAME    
              value: {{ .Values.mongoExpress.user | quote }}
            - name: ME_CONFIG_BASICAUTH_PASSWORD        
              value: {{ .Values.mongoExpress.password | quote }}
            {{- else }}
            - name: ME_CONFIG_BASICAUTH        
              value: "false"
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}